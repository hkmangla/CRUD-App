{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/answer/answer-routing.module.ts","webpack:///./src/app/answer/answer.module.ts","webpack:///./src/app/answer/answers/answers.component.css","webpack:///./src/app/answer/answers/answers.component.html","webpack:///./src/app/answer/answers/answers.component.ts","webpack:///./src/app/answer/edit-answer/edit-answer.component.html","webpack:///./src/app/answer/edit-answer/edit-answer.component.ts","webpack:///./src/app/answer/new-answer/new-answer.component.css","webpack:///./src/app/answer/new-answer/new-answer.component.html","webpack:///./src/app/answer/new-answer/new-answer.component.ts","webpack:///./src/app/answer/services/answer.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/category/categories/categories.component.css","webpack:///./src/app/category/categories/categories.component.html","webpack:///./src/app/category/categories/categories.component.ts","webpack:///./src/app/category/category-routing.module.ts","webpack:///./src/app/category/category.module.ts","webpack:///./src/app/category/new-category/new-category.component.css","webpack:///./src/app/category/new-category/new-category.component.html","webpack:///./src/app/category/new-category/new-category.component.ts","webpack:///./src/app/category/services/category.service.ts","webpack:///./src/app/pipes/capitalize.pipe.ts","webpack:///./src/app/pipes/pipe.module.ts","webpack:///./src/app/question/new-question/new-question.component.css","webpack:///./src/app/question/new-question/new-question.component.html","webpack:///./src/app/question/new-question/new-question.component.ts","webpack:///./src/app/question/question-routing.module.ts","webpack:///./src/app/question/question.module.ts","webpack:///./src/app/question/questions/questions.component.css","webpack:///./src/app/question/questions/questions.component.html","webpack:///./src/app/question/questions/questions.component.ts","webpack:///./src/app/question/services/question.service.ts","webpack:///./src/app/shared/confirm-prompt/confirm-prompt.component.css","webpack:///./src/app/shared/confirm-prompt/confirm-prompt.component.html","webpack:///./src/app/shared/confirm-prompt/confirm-prompt.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/validators/forbidden-names.directive.ts","webpack:///./src/app/validators/space-validator.directive.ts","webpack:///./src/app/validators/validator.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AnswersComponent} from './answers/answers.component';\n\nconst routes: Routes = [\n  {path: 'categories/:category/questions/:questionID', component: AnswersComponent},\n];\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AnswerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NewAnswerComponent} from './new-answer/new-answer.component';\nimport {EditAnswerComponent} from './edit-answer/edit-answer.component';\nimport {AnswersComponent} from './answers/answers.component';\nimport {MatDialogModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport { AnswerRoutingModule } from './/answer-routing.module';\nimport {PipeModule} from '../pipes/pipe.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AnswerRoutingModule,\n    PipeModule\n  ],\n  declarations: [\n    NewAnswerComponent,\n    EditAnswerComponent,\n    AnswersComponent\n  ],\n  // exports: [\n  //   NewAnswerComponent,\n  //   EditAnswerComponent,\n  //   AnswersComponent\n  // ]\n  entryComponents: [\n    EditAnswerComponent,\n    NewAnswerComponent\n  ]\n})\nexport class AnswerModule { }\n","module.exports = \".status-bar img {\\r\\n  width: 1em;\\r\\n  height: 1em;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.status-bar img:hover {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n}\\r\\n\\r\\n.status-bar {\\r\\n  height: 20px;\\r\\n  line-height: 20px;\\r\\n}\\r\\n\\r\\n.answer-section {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  padding-top: 130px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <p> <a routerLink=\\\"/categories\\\">Categories</a> >>\\n    <a routerLink=\\\"/categories/{{categoryTitle | lowercase}}\\\">\\n      {{categoryTitle | capitalize}}\\n    </a> >> {{questionText}} </p>\\n\\n  <h3>{{question}}</h3>\\n  <button class=\\\"btn btn-primary\\\"\\n    (click)=\\\"openDialog()\\\">New Answer</button>\\n  <div class=\\\"answer-section\\\">\\n    <div class=\\\"well\\\" *ngFor=\\\"let answer of answers; let i=index\\\">\\n        <p class=\\\"text\\\">{{answer.text}}</p>\\n        <p class=\\\"status-bar\\\">\\n          <img (click)=\\\"incLikes(answer._id)\\\" src=\\\"../../assets/like.png\\\"\\n               title=\\\"Like\\\"> {{answer.likes}}&nbsp;&nbsp;&nbsp;\\n          <img (click)=\\\"incDislikes(answer._id)\\\" class=\\\"dislike\\\"\\n               src=\\\"../../assets/dislike.png\\\" title=\\\"Dislike\\\"> {{answer.dislikes}}&nbsp;&nbsp;&nbsp;\\n          <img (click)=\\\"openConfirmPrompt(answer._id)\\\" src=\\\"../../assets/delete.png\\\"\\n               title=\\\"Delete\\\">&nbsp;&nbsp;&nbsp;\\n          <img (click)=\\\"openEditDialog(answer.text, answer._id)\\\" src=\\\"../../assets/edit.png\\\"\\n               title=\\\"Edit\\\">\\n        </p>\\n        <hr>\\n    </div>\\n  </div>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n    (click)=\\\"goBack()\\\">Back</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Answer } from '../answer';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { NewAnswerComponent } from '../new-answer/new-answer.component';\nimport { EditAnswerComponent } from '../edit-answer/edit-answer.component';\nimport {AnswerService} from '../services/answer.service';\nimport {CategoryService} from '../../category/services/category.service';\nimport {ConfirmPromptComponent} from '../../shared/confirm-prompt/confirm-prompt.component';\n\n@Component({\n  selector: 'app-answers',\n  templateUrl: './answers.component.html',\n  styleUrls: ['./answers.component.css']\n})\nexport class AnswersComponent implements OnInit {\n\n  categoryTitle: string;\n  questionId: string;\n  answers: Answer[];\n  questionText: string;\n\n  constructor(private answerService: AnswerService,\n              private route: ActivatedRoute,\n              private location: Location,\n              private matDialog: MatDialog) { }\n\n  ngOnInit() {\n    this.categoryTitle = this.route.snapshot.paramMap.get('category');\n    this.questionId = this.route.snapshot.paramMap.get('questionID');\n    this.getQuestionText();\n    this.getAnswers();\n  }\n\n  getQuestionText() {\n    this.answerService.getQuestionText(this.categoryTitle, this.questionId).subscribe(\n      res => this.questionText = res\n    );\n  }\n\n  getAnswers(): void {\n    this.answerService.getAnswers(this.categoryTitle, this.questionId).subscribe(\n      res => {\n        this.answers = res;\n      }\n    );\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  addAnswer(answerText): void {\n    if ( answerText === '') {\n      return;\n    }\n    const answer = {\n      _id: '',\n      text: answerText,\n      likes: 0,\n      dislikes: 0\n    };\n\n    this.answerService.addAnswer(this.categoryTitle, this.questionId, answer)\n        .subscribe(\n          response => {\n            if (response) {\n              this.getAnswers();\n            } else {\n              console.log('Failed to add answer!');\n            }\n          }\n        );\n  }\n\n\n  updateAnswer(editAnswerText, answerId): void {\n    if (editAnswerText === undefined || editAnswerText.trim() === '') {\n      return;\n    }\n\n    this.answerService.editAnswer(this.categoryTitle, this.questionId, answerId, editAnswerText)\n      .subscribe(\n        response => {\n          if (response) {\n            this.answers[this.answers.findIndex\n                        (obj => obj._id === answerId)].text = editAnswerText;\n          } else {\n            console.log('Failed to add answer!');\n          }\n        }\n      );\n  }\n\n  incLikes (answerId): void {\n    this.answerService.incLikes(this.categoryTitle, this.questionId, answerId).subscribe(\n      response => {\n        if(response['success'] === true) {\n          this.answers[this.answers.findIndex(\n            obj => obj._id == answerId)].likes += 1;\n        } else {\n          console.log('Failed to delete question');\n        }\n      }\n    );\n  }\n\n  incDislikes (answerId): void {\n    this.answerService.incDislikes(this.categoryTitle, this.questionId, answerId).subscribe(\n      response => {\n        if(response['success'] === true) {\n          this.answers[this.answers.findIndex(\n            obj => obj._id == answerId)].dislikes += 1;\n        } else {\n          console.log('Failed to delete question');\n        }\n      }\n    );\n  }\n\n  deleteAnswer(data): void {\n    if (data.message === 'Yes') {\n      this.answerService.deleteAnswer(this.categoryTitle, this.questionId, data.id).subscribe(\n        response => {\n          if(response['success'] === true) {\n            this.answers = this.answers.filter(\n              obj => obj._id != data.id\n            )\n          } else {\n            console.log('Failed to delete question');\n          }\n        }\n      );\n    }\n  }\n\n  openConfirmPrompt (id): void {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.data = {\n      message: '',\n      id: id\n    };\n\n    const dialogRef = this.matDialog.open(ConfirmPromptComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      data => this.deleteAnswer(data)\n    );\n\n  }\n\n  openEditDialog(answerText, answerId): void {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.data = answerText;\n\n    const dialogRef = this.matDialog.open(EditAnswerComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      data => this.updateAnswer(data, answerId)\n    );\n\n  }\n\n  openDialog(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    const dialogRef = this.matDialog.open(NewAnswerComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      answerText => this.addAnswer(answerText)\n    );\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <h2>Edit Answer</h2>\\n\\n  <div>\\n\\n    <div class=\\\"form-group\\\">\\n      <textarea class=\\\"form-control\\\" rows=\\\"4\\\" [(ngModel)]=\\\"newAnswerText\\\"></textarea>\\n    </div>\\n    <div>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Save</button>\\n      <button class=\\\"btn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-edit-answer',\n  templateUrl: './edit-answer.component.html',\n  styleUrls: ['../new-answer/new-answer.component.css']\n})\nexport class EditAnswerComponent implements OnInit {\n\n  newAnswerText: string;\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  save(): void {\n    this.dialogRef.close(this.newAnswerText);\n  }\n\n  constructor(private dialogRef: MatDialogRef<EditAnswerComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.newAnswerText = data;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"textarea:focus {\\r\\n  outline: none;\\r\\n  border: 2px solid green;\\r\\n}\\r\\n.container {\\r\\n  width: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2>New Answer</h2>\\n\\n  <div>\\n\\n    <div class=\\\"form-group\\\">\\n      <textarea class=\\\"form-control\\\" rows=\\\"4\\\" [(ngModel)]=\\\"newAnswerText\\\"></textarea>\\n    </div>\\n    <div>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Add</button>\\n      <button class=\\\"btn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-new-answer',\n  templateUrl: './new-answer.component.html',\n  styleUrls: ['./new-answer.component.css']\n})\nexport class NewAnswerComponent implements OnInit {\n\n  newAnswerText = '';\n\n  save(): void {\n    this.dialogRef.close(this.newAnswerText.trim());\n  }\n  cancel(): void {\n    this.dialogRef.close('');\n  }\n  constructor(private dialogRef: MatDialogRef<NewAnswerComponent>) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Answer} from '../answer';\nimport {Observable} from \"rxjs/index\";\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map} from \"rxjs/internal/operators/map\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  constructor(private http: HttpClient) { }\n  serverApi = 'http://localhost:3000';\n\n  getAnswers(categoryTitle, questionId): Observable<Answer[]> {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/answers`;\n\n    return this.http.get(URI).pipe(\n      map(res => <Answer[]>res['data'])\n    );\n  }\n\n  getQuestionText(categoryTitle, questionId): Observable<string> {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/description`;\n\n    return this.http.get(URI).pipe(\n      map(res => <string>res['data'])\n    );\n  }\n\n  addAnswer(categoryTitle, questionId, answer) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/answers`;\n\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post(URI, answer, {headers: headers});\n  }\n\n  editAnswer (categoryTitle, questionId, answerId, answertext) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/answers/${answerId}/text`;\n\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    const retObj = {\n      text: answertext\n    };\n\n    return this.http.put(URI, retObj, {headers: headers});\n  }\n\n  incLikes(categoryTitle, questionId, answerId) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/answers/${answerId}/likes`;\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.put(URI, {headers: headers});\n  }\n\n  incDislikes(categoryTitle, questionId, answerId) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/answers/${answerId}/dislikes`;\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.put(URI, {headers: headers});\n  }\n\n  deleteAnswer (categoryTitle, questionId, answerId) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/answers/${answerId}`;\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.delete(URI, {headers: headers});\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/categories', pathMatch: 'full'},\n];\n@NgModule({\n  exports: [\n    RouterModule\n  ],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \".heading {\\r\\n  background-color: #4a7687;\\r\\n  height: 100px;\\r\\n  width: 100%;\\r\\n  font-size: 30px;\\r\\n  line-height: 100px;\\r\\n  color: white;\\r\\n  text-align: center;\\r\\n  margin-top: 0px;\\r\\n  box-shadow: 0 0 5px 5px rgba(0,0,0,.33);\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n}\\r\\n\"","module.exports = \"<h1 class=\\\"heading\\\">Question Answering</h1>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CRUD-QuesAns';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {CategoryModule} from './category/category.module';\nimport {AnswerModule} from './answer/answer.module';\nimport {QuestionModule} from './question/question.module';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CategoryModule,\n    AnswerModule,\n    QuestionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"img {\\r\\n  width: 127px;\\r\\n  height: 127px;\\r\\n  margin-left: 18px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\nh3 {\\r\\n  color: dodgerblue;\\r\\n  margin-top: 0px;\\r\\n\\r\\n}\\r\\n.tags {\\r\\n  list-style: none;\\r\\n  padding: 0px;\\r\\n}\\r\\n.tags li {\\r\\n  display: inline-block;\\r\\n  background-color: rgb(210, 210, 210);\\r\\n  padding: 5px 10px;\\r\\n  margin-right: 10px;\\r\\n  margin-top: 10px;\\r\\n  border-radius: 15px;\\r\\n}\\r\\n.well {\\r\\n  cursor: pointer;\\r\\n}\\r\\n.well:hover {\\r\\n  -webkit-transform: scale(1.02, 1.02);\\r\\n          transform: scale(1.02, 1.02);\\r\\n  background-color: #dfdfdf;\\r\\n}\\r\\n.well:focus {\\r\\n  outline: none;\\r\\n}\\r\\n.container {\\r\\n  padding-top: 130px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n\\n  <p>Categories</p>\\n\\n  <div *ngFor=\\\"let category of categories\\\">\\n\\n    <div routerLink=\\\"{{category.title | lowercase}}\\\" class=\\\"well\\\">\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <img [src]=\\\"category.iconUrl\\\" [alt]=\\\"category.title\\\"\\n               onerror=\\\"src='../../assets/default.png';\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-10\\\">\\n          <h3>{{category.title | capitalize}}</h3>\\n          <p>{{category.description}}</p>\\n          <ul class=\\\"tags\\\">\\n            <li *ngFor=\\\"let tag of category.tags\\\">{{tag}}</li>\\n          </ul>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <button class=\\\"btn btn-primary btn-block btn-lg\\\"\\n            (click)=\\\"openDialog()\\\">ADD New Category</button>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Category} from '../category';\nimport {MatDialog, MatDialogConfig} from '@angular/material';\nimport {NewCategoryComponent} from '../new-category/new-category.component';\nimport { CategoryService } from '../services/category.service'\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  categories: Category[] = [];\n  categoriesTitle: String[] = [];\n\n  constructor(private categoryService: CategoryService,\n              private matDialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getCategories();\n    this.getCategoriesTitle();\n  }\n\n  openDialog(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.data = this.categoriesTitle;\n    const dialogRef = this.matDialog.open(NewCategoryComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(\n      data => {\n        if (data) {\n          this.categoryService.updateCategory(data).subscribe(\n            response => {\n              console.log(\"Response: \" + JSON.stringify(response));\n              this.categories = this.categories.concat(data);\n            },\n            err => console.log(err)\n          )\n        }\n      }\n    );\n  }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(\n      res => {\n        this.categories = res;\n      }\n    );\n  }\n  getCategoriesTitle() {\n    this.categoryService.getCategoryTitles().subscribe(\n      res => {\n        console.log('Titles: ' + JSON.stringify(res));\n        this.categoriesTitle = res;\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { CategoriesComponent } from './categories/categories.component';\n\nconst routes: Routes = [\n  {path: 'categories', component: CategoriesComponent}\n];\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CategoryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CategoriesComponent } from './categories/categories.component';\nimport {NewCategoryComponent} from './new-category/new-category.component';\nimport { CategoryRoutingModule } from './category-routing.module';\nimport {PipeModule} from '../pipes/pipe.module';\nimport {MatDialogModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport {ValidatorModule} from '../validators/validator.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {Category} from \"./category\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CategoryRoutingModule,\n    PipeModule,\n    MatDialogModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ValidatorModule,\n    HttpClientModule\n  ],\n  declarations: [\n    CategoriesComponent,\n    NewCategoryComponent\n  ],\n  entryComponents: [\n    NewCategoryComponent\n  ]\n})\nexport class CategoryModule { }\n","module.exports = \".container {\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n.tags {\\r\\n  list-style: none;\\r\\n  padding: 0px;\\r\\n}\\r\\n\\r\\n.tags li {\\r\\n  display: inline-block;\\r\\n  background-color: rgb(210, 210, 210);\\r\\n  padding: 5px 10px;\\r\\n  margin-right: 10px;\\r\\n  margin-top: 10px;\\r\\n  border-radius: 15px;\\r\\n}\\r\\n\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 5px solid green; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n.remove-tag {\\r\\n  color: #992222;\\r\\n  margin-left: 5px;\\r\\n  font-size: 12px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>New Category</h1>\\n  <form (keydown.enter)=\\\"$event.preventDefault()\\\"\\n        (ngSubmit)=\\\"onSubmit()\\\" #categoryForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Category Name</label>\\n      <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\"\\n             #name=\\\"ngModel\\\"\\n             [ngModel]=\\\"category.title | lowercase | capitalize\\\"\\n             (ngModelChange)=\\\"category.title=$event\\\"\\n             name=\\\"name\\\" autocomplete=\\\"off\\\" required\\n              appForbiddenNames=\\\"{{forbiddenNames}}\\\"\\n              appSpaceValidator>\\n      <div *ngIf=\\\"name.invalid && name.dirty\\\"\\n           class=\\\"alert alert-danger\\\">\\n\\n        <div *ngIf=\\\"name?.errors.required\\\">\\n          Name is Required!\\n        </div>\\n\\n        <div *ngIf=\\\"name?.errors.forbiddenName\\\">\\n          Category Exists!\\n        </div>\\n\\n        <div *ngIf=\\\"name?.errors.forbiddenSpace\\\">\\n          Category name should not contain spaces!\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"iconUrl\\\">Icon Url</label>\\n      <input type=\\\"text\\\" id=\\\"iconUrl\\\" class=\\\"form-control\\\"\\n             [(ngModel)]=\\\"category.iconUrl\\\" name=\\\"iconUrl\\\"\\n             autocomplete=\\\"off\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Category Description</label>\\n      <textarea type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"category.description\\\" name=\\\"description\\\"\\n                autocomplete=\\\"off\\\" required #description=\\\"ngModel\\\"></textarea>\\n      <div class=\\\"alert alert-danger\\\"\\n           [hidden]=\\\"description.valid || description.pristine\\\">\\n        Description is Required!\\n      </div>\\n    </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"tags\\\">Add Tags</label>\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" id=\\\"tags\\\" class=\\\"form-control\\\"\\n                 [(ngModel)]=\\\"newTag\\\" name=\\\"tags\\\" autocomplete=\\\"off\\\"\\n                  minlength=\\\"4\\\" #tagElement=\\\"ngModel\\\"\\n                  (keyup.enter)=\\\"addTag()\\\">\\n\\n          <span class=\\\"input-group-btn\\\">\\n            <button id=\\\"addATag\\\" type=\\\"button\\\" (click)=\\\"addTag()\\\"\\n                    [disabled]=\\\"newTag == null || newTag.trim().length < 4\\\" class=\\\"btn default-btn\\\">+</button>\\n          </span>\\n        </div>\\n\\n        <div>\\n          * Tag must be at least 4 character long.\\n        </div>\\n\\n      </div>\\n\\n    <ul class=\\\"tags\\\">\\n      <li *ngFor=\\\"let tag of category.tags\\\">{{tag}}\\n          <span (click)=\\\"removeTag(tag)\\\" class=\\\"remove-tag\\\">&#x274C;</span></li>\\n    </ul>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!categoryForm.form.valid\\\"\\n            class=\\\"btn btn-primary\\\">Add</button>\\n    <button type=\\\"button\\\" (click)=\\\"onCancel();categoryForm.reset()\\\"\\n            class=\\\"btn btn-primary\\\">Cancel</button>\\n\\n  </form>\\n</div>\\n\"","import {Component, Inject, OnInit } from '@angular/core';\nimport {Category} from '../category';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {CategoryService} from '../services/category.service';\n\n@Component({\n  selector: 'app-new-category',\n  templateUrl: './new-category.component.html',\n  styleUrls: ['./new-category.component.css'],\n})\nexport class NewCategoryComponent implements OnInit {\n\n  newTag = '';\n  category: Category = {\n      title: '',\n      iconUrl: '',\n      description: '',\n      tags: []\n  };\n\n  forbiddenNames: string[];\n\n  addTag(): void {\n    this.newTag = this.newTag.trim();\n    if (this.newTag === null || this.newTag.length < 4) {\n      return;\n    }\n    this.category.tags.push(this.newTag);\n    this.newTag = '';\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n  onSubmit(): void {\n    this.category.title = this.category.title.toLowerCase();\n    console.log(JSON.stringify(this.category));\n    this.dialogRef.close(this.category);\n  }\n\n  removeTag(tag): void {\n    this.category.tags.splice(this.category.tags.indexOf(tag), 1);\n  }\n\n  constructor(private dialogRef: MatDialogRef<NewCategoryComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.forbiddenNames = data;\n    console.log(this.forbiddenNames);\n  }\n\n  ngOnInit() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Category} from '../category';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs/index\";\nimport {map} from \"rxjs/internal/operators/map\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CategoryService {\n\n  constructor(private http: HttpClient) { }\n\n  private serverApi = 'http://localhost:3000';\n\n  getCategoryTitles(): Observable<String[]> {\n    const URI = `${this.serverApi}/cruddata/categories/titles`;\n\n    return this.http.get(URI).pipe(\n      map(res => res['data'].map(val => val['title']))\n    );\n  }\n\n  getCategories(): Observable<any> {\n    const URI = `${this.serverApi}/cruddata/categories`;\n    return this.http.get(URI).pipe(\n      map(res => res['data'])\n    );\n  }\n\n\n  updateCategory(category) {\n    const URI = `${this.serverApi}/cruddata`;\n\n    if (category !== undefined && category !== null) {\n      let headers = new HttpHeaders();\n\n      headers.append('Content-Type', 'application/json');\n\n      return this.http.post(URI, category, {headers: headers});\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string, args?: any[]): string {\n    if (value === null) {\n      return 'Not assigned';\n    }\n\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {CapitalizePipe} from './capitalize.pipe';\n\n@NgModule({\n  declarations: [\n    CapitalizePipe\n  ],\n  exports: [\n    CapitalizePipe\n  ]\n})\nexport class PipeModule { }\n","module.exports = \"textarea:focus {\\r\\n  outline: none;\\r\\n  border: 2px solid green;\\r\\n}\\r\\n.container {\\r\\n  width: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2>New Question</h2>\\n\\n  <div>\\n\\n    <div class=\\\"form-group\\\">\\n      <textarea class=\\\"form-control\\\" rows=\\\"4\\\" [(ngModel)]=\\\"newQuestionText\\\"></textarea>\\n    </div>\\n    <div>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">Add</button>\\n      <button class=\\\"btn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-new-question',\n  templateUrl: './new-question.component.html',\n  styleUrls: ['./new-question.component.css']\n})\nexport class NewQuestionComponent implements OnInit {\n\n  newQuestionText: string;\n\n  cancel(): void {\n    this.matDialogRef.close();\n  }\n\n  save(): void {\n    this.matDialogRef.close(this.newQuestionText);\n  }\n  constructor(private matDialogRef: MatDialogRef<NewQuestionComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { QuestionsComponent } from './questions/questions.component';\n\nconst routes: Routes = [\n  {path: 'categories/:category', component: QuestionsComponent}\n];\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class QuestionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {QuestionsComponent} from './questions/questions.component';\nimport {NewQuestionComponent} from './new-question/new-question.component';\nimport { QuestionRoutingModule } from './/question-routing.module';\nimport {MatDialogModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport {PipeModule} from '../pipes/pipe.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {ConfirmPromptComponent} from '../shared/confirm-prompt/confirm-prompt.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    QuestionRoutingModule,\n    MatDialogModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    PipeModule,\n    SharedModule,\n    HttpClientModule\n  ],\n  declarations: [\n    QuestionsComponent,\n    NewQuestionComponent\n  ],\n  entryComponents: [\n    NewQuestionComponent\n  ]\n})\nexport class QuestionModule { }\n","module.exports = \".status-bar img {\\r\\n  width: 1em;\\r\\n  height: 1em;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.status-bar {\\r\\n  height: 20px;\\r\\n  line-height: 20px;\\r\\n}\\r\\n\\r\\n.status-bar img:hover {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n}\\r\\n\\r\\n.description {\\r\\n  color: dodgerblue;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.question-section {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.message {\\r\\n  margin-top: 20px;\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  padding-top: 130px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <p><a class=\\\"prev-link\\\" routerLink=\\\"/categories\\\">Categories</a> >>\\n    {{categoryTitle | capitalize}}</p>\\n\\n  <h3>Learn About: {{categoryTitle | capitalize}}</h3>\\n  <button class=\\\"btn btn-primary\\\"\\n    (click)=\\\"openDialog()\\\">New Question</button>\\n  <div class=\\\"message\\\" *ngIf=\\\"!questions\\\">\\n    Category doesn't contain any question!\\n  </div>\\n  <div class=\\\"question-section\\\">\\n    <div *ngFor=\\\"let question of questions; let i=index\\\">\\n      <div class=\\\"well\\\">\\n        <a routerLink=\\\"questions/{{question._id}}\\\">\\n          <p class=\\\"description\\\">{{question.description}}</p>\\n        </a>\\n        <p class=\\\"status-bar\\\">\\n          <img (click)=\\\"incLikes(question._id)\\\" src=\\\"../../assets/like.png\\\"\\n               title=\\\"Like\\\"> {{question.likes}}&nbsp;&nbsp;&nbsp;\\n          <img (click)=\\\"incDislikes(question._id)\\\" class=\\\"dislike\\\"\\n               src=\\\"../../assets/dislike.png\\\" title=\\\"Dislike\\\"> {{question.dislikes}}&nbsp;&nbsp;&nbsp;\\n          <img (click)=\\\"openPromptDialog(question._id)\\\" src=\\\"../../assets/delete.png\\\"\\n               title=\\\"Delete\\\">&nbsp;&nbsp;&nbsp; {{question.answersCount}} answers</p>\\n        <hr>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n    (click)=\\\"goBack()\\\">Back</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Question } from '../question';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { NewQuestionComponent } from '../new-question/new-question.component';\nimport { QuestionService } from '../services/question.service';\nimport { CategoryService } from '../../category/services/category.service';\nimport {ConfirmPromptComponent} from '../../shared/confirm-prompt/confirm-prompt.component';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n\n  questions: Question[];\n  categoryTitle: string;\n  newQuestionText: string;\n\n  constructor(private questionService: QuestionService,\n              private route: ActivatedRoute,\n              private location: Location,\n              private matDialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getCategoryTitle();\n    this.getQuestions();\n  }\n\n  getCategoryTitle(): void {\n    this.categoryTitle = this.route.snapshot.paramMap.get('category');\n  }\n\n  getQuestions(): void {\n    this.questionService.getQuestions(this.categoryTitle).subscribe(\n      res => {\n        this.questions = res;\n        console.log(this.questions);\n      }\n    );\n  }\n\n  incLikes (questionId): void {\n    this.questionService.incLikes(this.categoryTitle, questionId).subscribe(\n      response => {\n        if(response['success'] === true) {\n          this.questions[this.questions.findIndex(\n            obj => obj._id == questionId)].likes += 1;\n        } else {\n          console.log('Failed to delete question');\n        }\n      }\n    );\n  }\n\n  incDislikes (questionId): void {\n    this.questionService.incDislikes(this.categoryTitle, questionId).subscribe(\n      response => {\n        if(response['success'] === true) {\n          this.questions[this.questions.findIndex(\n            obj => obj._id == questionId)].dislikes += 1;\n        } else {\n          console.log('Failed to delete question');\n        }\n      }\n    );\n  }\n\n  deleteQuestion(data): void {\n    if (data.message === 'Yes') {\n      this.questionService.deleteQuestion(this.categoryTitle, data.id).subscribe(\n        response => {\n          if(response['success'] === true) {\n            this.questions = this.questions.filter(\n              obj => obj._id != data.id\n            )\n          } else {\n            console.log('Failed to delete question');\n          }\n        }\n      );\n    }\n  }\n\n  openPromptDialog(id): void {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.data = {\n      message: '',\n      id: id\n    };\n\n    const dialogRef = this.matDialog.open(ConfirmPromptComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      data => this.deleteQuestion(data)\n    );\n\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  updateQuestion(): void {\n    if (this.newQuestionText === undefined ||\n        this.newQuestionText.trim() === '') {\n      return;\n    }\n\n    const question: Question = {\n      _id: '',\n      description: this.newQuestionText,\n      likes: 0,\n      dislikes: 0,\n      answersCount: 0\n    };\n\n    this.questionService.addQuestion(this.categoryTitle, question).subscribe(\n      response => {\n        if(response['success'] === true) {\n          this.getQuestions();\n        } else {\n          console.log('Failed to add question');\n        }\n      }\n    );\n  }\n  openDialog(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n\n    const dialogRef = this.matDialog.open(NewQuestionComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      questionText => this.newQuestionText = questionText,\n      error => console.log(error),\n      this.updateQuestion.bind(this));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Question } from '../question';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs/index\";\nimport {map} from \"rxjs/internal/operators/map\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  serverApi = 'http://localhost:3000';\n\n  getQuestions(categoryTitle): Observable<Question[]> {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions`;\n    return this.http.get(URI).pipe(\n        map(res => <Question[]>res['data']['questions'])\n    );\n  }\n\n  incLikes(categoryTitle, questionId) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/likes`;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.put(URI, {headers: headers});\n  }\n\n  incDislikes(categoryTitle, questionId) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}/dislikes`;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.put(URI, {headers: headers});\n  }\n\n  deleteQuestion(categoryTitle, questionId) {\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions/${questionId}`;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.delete(URI, {headers: headers});\n  }\n\n  addQuestion(categoryTitle, question) {\n\n    const URI = `${this.serverApi}/cruddata/categories/${categoryTitle}/questions`;\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.post(URI, question, {headers: headers});\n  }\n\n}\n","module.exports = \".container {\\r\\n  width: 300px;\\r\\n  height: 150px;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n  font-weight: bold;\\r\\n  text-align: center;\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.action {\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  width: 100px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h4>Are you sure want to perform the delete action?</h4>\\n  <div class=\\\"action\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"delete()\\\">Yes</button>\\n    <button class=\\\"btn\\\" (click)=\\\"cancel()\\\">No</button>\\n  </div>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-confirm-prompt',\n  templateUrl: './confirm-prompt.component.html',\n  styleUrls: ['./confirm-prompt.component.css']\n})\nexport class ConfirmPromptComponent implements OnInit {\n\n  id: number;\n  delete(): void {\n    this.dialogRef.close({message: 'Yes', id: this.id});\n  }\n  cancel(): void {\n    this.dialogRef.close({message: 'No', id: this.id});\n  }\n\n  constructor(private dialogRef: MatDialogRef<ConfirmPromptComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n              this.id = data.id;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ConfirmPromptComponent} from './confirm-prompt/confirm-prompt.component';\nimport {MatDialogModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    BrowserAnimationsModule\n  ],\n  declarations: [\n    ConfirmPromptComponent\n  ],\n  exports: [\n    ConfirmPromptComponent\n  ],\n  entryComponents: [\n    ConfirmPromptComponent\n  ]\n})\nexport class SharedModule { }\n","import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator, ValidatorFn} from '@angular/forms';\n\nexport function forbiddenValidatorFunction(names: string): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n      let value = '';\n      if (control.value) {\n        value = control.value.toLowerCase();\n      }\n      const forbidden = names.toLowerCase().trim()\n                                .split(',').includes(value);\n      return forbidden ? {'forbiddenName': true} : null;\n    };\n}\n@Directive({\n  selector: '[appForbiddenNames]',\n  providers: [{provide: NG_VALIDATORS, useExisting:\n                ForbiddenNamesDirective, multi: true}]\n})\nexport class ForbiddenNamesDirective implements Validator {\n\n  @Input('appForbiddenNames') appForbiddenNames: string;\n\n  validate (control: AbstractControl): {[key: string]: any} | null {\n      return forbiddenValidatorFunction(this.appForbiddenNames)(control);\n  }\n  constructor() { }\n\n}\n","import {Directive} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\n\nexport function spaceValidatorFunction (control: AbstractControl): {[key: string]: any} | null {\n  const forbidden = control.value.indexOf(' ') >= 0;\n  return forbidden ? {'forbiddenSpace': true} : null;\n}\n\n@Directive({\n  selector: '[appSpaceValidator]',\n  providers: [{provide: NG_VALIDATORS,\n                useExisting: SpaceValidatorDirective,\n                multi: true}]\n})\nexport class SpaceValidatorDirective implements Validator {\n\n  validate (control: AbstractControl): {[key: string]: any} | null {\n    return control.value ? spaceValidatorFunction(control) : null;\n  }\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ForbiddenNamesDirective} from './forbidden-names.directive';\nimport {SpaceValidatorDirective} from './space-validator.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ForbiddenNamesDirective,\n    SpaceValidatorDirective\n  ],\n  exports: [\n    ForbiddenNamesDirective,\n    SpaceValidatorDirective\n  ]\n})\nexport class ValidatorModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}